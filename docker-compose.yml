# Docker Config is based on: https://github.com/GhazanfarMir/dockercompose-laravel-nginx
version: "3.3"

services:
  nginx:
    container_name: noted-storage-nginx
    image: nginx:latest
    ports:
      - "${WEB_PORT}:80"
      - "${SSL_PORT}:443"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - appnet
    depends_on:
      - php

  php:
    container_name: noted-storage-php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: shmolf/php-fpm:latest
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    working_dir: ${DOCUMENT_ROOT}
    environment:
      - DATABASE_URL=${SYMFONY_DB_URL}
      - DATABASE_VERSION=${SYMFONY_DB_VERSION}
    networks:
      - appnet
    depends_on:
      - database
      - composer

    # make 'database' a known service/host inside of 'php'
    # use this to make a mysql connection to host 'database'
    links:
      - database

  php-doctrine-migrate:
    container_name: noted-storage-php-doctrine-mig
    image: shmolf/php-fpm:latest
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
    working_dir: ${DOCUMENT_ROOT}
    environment:
      - DATABASE_URL=${SYMFONY_DB_URL}
      - DATABASE_VERSION=${SYMFONY_DB_VERSION}
    networks:
      - appnet
    depends_on:
      - database
      - composer
    links:
      - database
    command: bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration

  node-base:
    container_name: noted-storage-node-base
    image: node:lts-alpine3.13
    environment:
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ${APP_PATH}:/app
    working_dir: /app
  node-install:
    container_name: noted-storage-node-install
    extends:
      service: node-base
    command: npx yarn install
  node-build:
    container_name: noted-storage-node-build
    extends:
      service: node-base
    depends_on:
      - node-install
    command: npx yarn run dev

  composer:
    image: composer:2.1.3
    container_name: noted-storage-composer
    command: 'composer install'
    volumes:
      # We map to `/app`, because that's the default dir for docker image
      - ${APP_PATH}:/app

  database:
    container_name: noted-storage-database
    image: mysql:8.0.25
    restart: always
    # https://dev.mysql.com/doc/mysql-linuxunix-excerpt/8.0/en/docker-mysql-more-topics.html
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--character-set-server=utf8mb4'
    ]
    volumes:
      - storage-app:/var/lib/mysql
    hostname: mysql-container
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - appnet

networks:
  appnet:
    driver: "bridge"

volumes:
  storage-app:

security:
  encoders:
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      provider: app_user_provider
      pattern: ^/ðŸ”Œ/
      logout: ~

      guard:
        authenticators:
          - App\Security\TokenAuthenticator

      # if you want, disable storing the user in the session
      stateless: true

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true
    oauth:
      pattern: ^/ãŠ™/
      anonymous: lazy
      logout: ~
      guard:
        entry_point: App\Security\OAuthLoginFormAuthenticator
        authenticators:
          - App\Security\OAuthLoginFormAuthenticator
    default:
      anonymous: lazy
      logout:
        path: logout
      guard:
        entry_point: App\Security\LoginFormAuthenticator
        authenticators:
          - App\Security\LoginFormAuthenticator

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: '^/oauth/(login|register)', roles: [ IS_ANONYMOUS, IS_AUTHENTICATED_ANONYMOUSLY ]}
    - { path: '^/oauth', roles: [ IS_ANONYMOUS, IS_AUTHENTICATED_ANONYMOUSLY ]}
    - { path: '^/account/create', roles: [ IS_ANONYMOUS, IS_AUTHENTICATED_ANONYMOUSLY ]}
    - { path: '^/login', roles: [ IS_ANONYMOUS, IS_AUTHENTICATED_ANONYMOUSLY ]}
    - { path: '^/ðŸ”Œ', roles: ROLE_USER }
    - { path: '^/admin', roles: ROLE_ADMIN }
    - { path: '^/profile', roles: ROLE_USER }
    - { path: '^/', roles: ROLE_USER }

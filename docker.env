###> Database ENV Variables >###
SCHEMA_VER='8.0'
DB_PORT=13306
DB_ROOT_PASSWORD=supersecret
# These next three variables should match what is configured for the Doctrine DSN
DB_NAME=yourDoctrineDatabase

# Uncomment and edit DB_USER & DB_PASSWORD, if the MySQL host has the user setup with proper Grants.
# DB_USER=yourDoctrineUser
# DB_PASSWORD=yourDoctrinePassword

# This next line may not reflex what the symfony environment has.
# - It uses the Root user, since we can't `GRANT *.*` for `DB_USER` (unless done manually)
# - It references `database` as the host, since that's the name of the MySQL service in the docker-compose.yml.
# THIS IS NOT PRODUCTION-SAFE!!! You'd Never use `root` in a production environment.
SYMFONY_DB_URL="mysql://root:${DB_ROOT_PASSWORD}@database:3306/${DB_NAME}?serverVersion=${SCHEMA_VER}&charset=utf8"
SYMFONY_DB_VERSION=$SCHEMA_VER
###< Database ENV Variables <###

### Everything below this line, you probably don't need to modify, unless you've changed the app's folder structure/setup.

###> Nginx ENV Variables >###
WEB_PORT=8080
SSL_PORT=4433
###< Nginx ENV Variables <###

###> Application ENV Variables >###
# Ref '.' for directory where this file exists
APP_PATH=.
# Symfony has a `public` directory at the root of the app.
# So, `docker\nginx\config\default.conf` specifies the document root to be `/var/www/public`
DOCUMENT_ROOT='/var/www'
###< Application ENV Variables <###

###> NODE ENV Variables >###
NODE_ENV=developement
# NODE_ENV=production
###< NODE ENV Variables <###

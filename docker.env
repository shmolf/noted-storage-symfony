###> Database ENV Variables >###
SCHEMA_VER='8.0'
DB_PORT=13306
DB_ROOT_PASSWORD=supersecret

# If any of these change after the container & volume is first built, then both will need to be destroyed.
# Otherwise, MySQL won't re-initialize a database with the new values.
# This only applies to persisted storage.
DB_USER=yourDoctrineUser
DB_PASSWORD=yourDoctrinePassword
DB_NAME=yourDoctrineDatabase

# This next line may not reflect what the `.env.local` file has.
# It references `database` as the host, since that's the name of the MySQL service in the docker-compose.yml.
SYMFONY_DB_URL="mysql://root:${DB_ROOT_PASSWORD}@database:3306/${DB_NAME}?serverVersion=${SCHEMA_VER}&charset=utf8"
SYMFONY_DB_VERSION=$SCHEMA_VER
###< Database ENV Variables <###

### Everything below this line, you probably don't need to modify, unless you've changed the app's folder structure/setup.

###> Nginx ENV Variables >###
WEB_PORT=8080
SSL_PORT=4433
###< Nginx ENV Variables <###

###> Application ENV Variables >###
# Ref '.' for directory where this file exists
APP_PATH=.
# Symfony has a `public` directory at the root of the app.
# So, `docker\nginx\config\default.conf` specifies the document root to be `/var/www/public`
DOCUMENT_ROOT='/var/www'
# This value is used for CORS.
NOTED_HOST='https://noted-d.app'
###< Application ENV Variables <###

###> NODE ENV Variables >###
NODE_ENV=developement
# NODE_ENV=production
###< NODE ENV Variables <###
